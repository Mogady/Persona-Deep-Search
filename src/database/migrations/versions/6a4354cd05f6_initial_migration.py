"""Initial migration

Revision ID: 6a4354cd05f6
Revises: 
Create Date: 2025-10-03 00:59:39.015378

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6a4354cd05f6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('research_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('target_name', sa.String(length=255), nullable=False),
    sa.Column('research_depth', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', name='sessionstatus'), nullable=False),
    sa.Column('total_facts', sa.Integer(), nullable=True),
    sa.Column('total_connections', sa.Integer(), nullable=True),
    sa.Column('total_risks', sa.Integer(), nullable=True),
    sa.Column('total_searches', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('final_report', sa.Text(), nullable=True),
    sa.Column('connection_graph', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_session_created', 'research_sessions', ['created_at'], unique=False)
    op.create_index('idx_session_status', 'research_sessions', ['status'], unique=False)
    op.create_index(op.f('ix_research_sessions_session_id'), 'research_sessions', ['session_id'], unique=True)
    op.create_index(op.f('ix_research_sessions_target_name'), 'research_sessions', ['target_name'], unique=False)
    op.create_table('connections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('entity_a', sa.String(length=255), nullable=False),
    sa.Column('entity_b', sa.String(length=255), nullable=False),
    sa.Column('relationship_type', sa.String(length=100), nullable=False),
    sa.Column('evidence', sa.JSON(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['research_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_connection_entities', 'connections', ['entity_a', 'entity_b'], unique=False)
    op.create_index('idx_connection_type', 'connections', ['relationship_type'], unique=False)
    op.create_index(op.f('ix_connections_entity_a'), 'connections', ['entity_a'], unique=False)
    op.create_index(op.f('ix_connections_entity_b'), 'connections', ['entity_b'], unique=False)
    op.create_index(op.f('ix_connections_session_id'), 'connections', ['session_id'], unique=False)
    op.create_table('facts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('source_url', sa.String(length=500), nullable=False),
    sa.Column('category', sa.Enum('BIOGRAPHICAL', 'PROFESSIONAL', 'FINANCIAL', 'BEHAVIORAL', 'EDUCATIONAL', 'LEGAL', 'SOCIAL', 'OTHER', name='factcategory'), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('verification_source_count', sa.Integer(), nullable=True),
    sa.Column('extracted_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('extraction_method', sa.String(length=50), nullable=True),
    sa.Column('raw_context', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['research_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_fact_category', 'facts', ['category'], unique=False)
    op.create_index('idx_fact_confidence', 'facts', ['confidence_score'], unique=False)
    op.create_index(op.f('ix_facts_session_id'), 'facts', ['session_id'], unique=False)
    op.create_table('risk_flags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='riskseverity'), nullable=False),
    sa.Column('category', sa.Enum('LEGAL', 'FINANCIAL', 'REPUTATIONAL', 'COMPLIANCE', 'OPERATIONAL', 'OTHER', name='riskcategory'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('evidence', sa.JSON(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('mitigation_notes', sa.Text(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['research_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_risk_category', 'risk_flags', ['category'], unique=False)
    op.create_index('idx_risk_severity', 'risk_flags', ['severity'], unique=False)
    op.create_index(op.f('ix_risk_flags_session_id'), 'risk_flags', ['session_id'], unique=False)
    op.create_table('search_queries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('iteration', sa.Integer(), nullable=False),
    sa.Column('search_engine', sa.String(length=50), nullable=True),
    sa.Column('results_count', sa.Integer(), nullable=True),
    sa.Column('relevance_score', sa.Float(), nullable=True),
    sa.Column('facts_extracted', sa.Integer(), nullable=True),
    sa.Column('executed_at', sa.DateTime(), nullable=False),
    sa.Column('execution_time_ms', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['research_sessions.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_query_executed', 'search_queries', ['executed_at'], unique=False)
    op.create_index('idx_query_iteration', 'search_queries', ['iteration'], unique=False)
    op.create_index(op.f('ix_search_queries_session_id'), 'search_queries', ['session_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_search_queries_session_id'), table_name='search_queries')
    op.drop_index('idx_query_iteration', table_name='search_queries')
    op.drop_index('idx_query_executed', table_name='search_queries')
    op.drop_table('search_queries')
    op.drop_index(op.f('ix_risk_flags_session_id'), table_name='risk_flags')
    op.drop_index('idx_risk_severity', table_name='risk_flags')
    op.drop_index('idx_risk_category', table_name='risk_flags')
    op.drop_table('risk_flags')
    op.drop_index(op.f('ix_facts_session_id'), table_name='facts')
    op.drop_index('idx_fact_confidence', table_name='facts')
    op.drop_index('idx_fact_category', table_name='facts')
    op.drop_table('facts')
    op.drop_index(op.f('ix_connections_session_id'), table_name='connections')
    op.drop_index(op.f('ix_connections_entity_b'), table_name='connections')
    op.drop_index(op.f('ix_connections_entity_a'), table_name='connections')
    op.drop_index('idx_connection_type', table_name='connections')
    op.drop_index('idx_connection_entities', table_name='connections')
    op.drop_table('connections')
    op.drop_index(op.f('ix_research_sessions_target_name'), table_name='research_sessions')
    op.drop_index(op.f('ix_research_sessions_session_id'), table_name='research_sessions')
    op.drop_index('idx_session_status', table_name='research_sessions')
    op.drop_index('idx_session_created', table_name='research_sessions')
    op.drop_table('research_sessions')
    # ### end Alembic commands ###
